var arr0, fc, i;

import { u, cl, aprodec, join } from './raffinade.js';

arr0 = function* () {
	return yield* [1, 2];
};

arr0 = arr0(u);

fc = function (arg) {
	return arg.reduce(function (acc, itm) {
		return acc * itm;
	});
};

cl(
	'# ' +
		join(
			', ',
			await (async function () {
				var ref, results;
				ref = aprodec(fc, arr0, [3, 4], [5, 6]);
				results = [];
				for await (i of ref) {
					results.push(i);
				}
				return results;
			})()
		)
);

// 15, 18, 20, 24, 30, 36, 40, 48
/*
interval = [1, 10]

g1 = asyncrange3 ...interval
g2 = asyncrange3 ...[2, 8]

cl i for i  from enamerate g1
*/
